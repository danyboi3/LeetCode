/*
We are given two sentences A and B.  (A sentence is a string of space separated words.  Each word consists only of lowercase letters.)

A word is uncommon if it appears exactly once in one of the sentences, and does not appear in the other sentence.

Return a list of all uncommon words. 

You may return the list in any order.

 

Example 1:

Input: A = "this apple is sweet", B = "this apple is sour"
Output: ["sweet","sour"]
Example 2:

Input: A = "apple apple", B = "banana"
Output: ["banana"]
 

Note:

0 <= A.length <= 200
0 <= B.length <= 200
A and B both contain only spaces and lowercase letters.
*/

class Solution {
    public String[] uncommonFromSentences(String A, String B) {
        String [] words = (A + " " + B).split("\\s+");
        
        HashMap<String, Integer> map = new HashMap<String, Integer>();
        
        for(int i = 0; i < words.length; i++){
            if(map.containsKey(words[i])){
                map.put(words[i], 1);
            }
            else{
                map.put(words[i], 0);
            }
        }
        
        List<String> result = new ArrayList<>();
          
        for(String key:map.keySet())
            if(map.get(key) == 0){
                result.add(key);
            }
                
        
        return result.toArray(new String[result.size()]);
    }
}
